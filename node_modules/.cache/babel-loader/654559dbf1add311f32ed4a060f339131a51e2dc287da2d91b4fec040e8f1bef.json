{"ast":null,"code":"var _jsxFileName = \"/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport React, { useState } from 'react';\n// import contractABI from './abi.json';\nimport contractABIstaking from './abi_staking.json';\n\n// This function detects most providers injected at window.ethereum\n// import detectEthereumProvider from '@metamask/detect-provider';\n\n// const contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAdressStaking = '0x1D37813CB62DD4Bf6CD065e582AA9cC87AD1f135';\nlet provider = new ethers.providers.Web3Provider(window.ethereum);\nlet contract = new ethers.Contract(contractAdressStaking, contractABIstaking, provider);\nlet signer;\n\n// const loadData = async() => {\n//   // const provider = new ethers.providers.Web3Provider(window.ethereum)\n//   const provider = new ethers.providers.Web3Provider(window.ethereum)\n//   const contract = new ethers.Contract(contractAdress, contractABI, provider)\n//   const greeting = await contract.hello()\n//   alert(greeting);\n// }\n\n// const metamask_test = async() => {\n\n//   const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n//   await provider.send(\"eth_requestAccounts\", []);\n\n//   const signer = provider.getSigner()\n\n//   if (provider) {\n//     // From now on, this should always be true:\n//     alert(provider.isMetaMask);\n//     // alert('MetaMask found');\n//   } else {\n//     alert('Please install MetaMask!');\n//   }\n// }\n\nfunction App() {\n  const [donated, setDonated] = useState[0];\n  const [lidoBalance, setLidoBalance] = useState[0];\n  const [surplus, setSurplus] = useState[0];\n  const connect = async () => {\n    await provider.send(\"eth_requestAccounts\", []);\n    signer = provider.getSigner();\n    contract = new ethers.Contract(contractAdressStaking, contractABIstaking, signer);\n    const userAdress = await signer.getAddress();\n    console.log(userAdress);\n  };\n  const deposit = async () => {\n    let userAmount = document.getElementById('deposit-amount').value;\n    const weiAmount = ethers.utils.parseEther(userAmount);\n    console.log(await contract.deployed());\n    const tx = await contract.deposit({\n      value: weiAmount\n    });\n    const receipt = await tx.wait();\n  };\n  const withdraw = async () => {\n    await contract.withdraw();\n  };\n  const updateBalances = async () => {\n    const donated = await contract.donated();\n    setDonated(ethers.utils.formatEther(donated));\n    const lidoBalance = await contract.lidoBalance();\n    setLidoBalance(ethers.utils.formatEther(lidoBalance));\n    const surplus = lidoBalance.sub(donated);\n    setSurplus(ethers.utils.formatEther(surplus));\n  };\n  setTimeout(() => {\n    updateBalances();\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \" to stake\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"App to stake and withdraw earnings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Donated: \", donated, \" ETH\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 35\n          }, this), \"Balance: \", lidoBalance, \" ETH\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 39\n          }, this), \"Surplus: \", surplus, \" ETH\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connect,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"deposit-amount\",\n            placeholder: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deposit,\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: withdraw,\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useState","contractABIstaking","contractAdressStaking","provider","providers","Web3Provider","window","ethereum","contract","Contract","signer","App","donated","setDonated","lidoBalance","setLidoBalance","surplus","setSurplus","connect","send","getSigner","userAdress","getAddress","console","log","deposit","userAmount","document","getElementById","value","weiAmount","utils","parseEther","deployed","tx","receipt","wait","withdraw","updateBalances","formatEther","sub","setTimeout"],"sources":["/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n\nimport { ethers } from 'ethers';\nimport React, {useState} from 'react';\n// import contractABI from './abi.json';\nimport contractABIstaking from './abi_staking.json';\n\n// This function detects most providers injected at window.ethereum\n// import detectEthereumProvider from '@metamask/detect-provider';\n\n// const contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\nconst contractAdressStaking = '0x1D37813CB62DD4Bf6CD065e582AA9cC87AD1f135';\n\nlet provider = new ethers.providers.Web3Provider(window.ethereum);\nlet contract = new ethers.Contract(contractAdressStaking, contractABIstaking, provider);\nlet signer;\n\n\n// const loadData = async() => {\n//   // const provider = new ethers.providers.Web3Provider(window.ethereum)\n//   const provider = new ethers.providers.Web3Provider(window.ethereum)\n//   const contract = new ethers.Contract(contractAdress, contractABI, provider)\n//   const greeting = await contract.hello()\n//   alert(greeting);\n// }\n\n// const metamask_test = async() => {\n\n//   const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n//   await provider.send(\"eth_requestAccounts\", []);\n\n//   const signer = provider.getSigner()\n\n//   if (provider) {\n//     // From now on, this should always be true:\n//     alert(provider.isMetaMask);\n//     // alert('MetaMask found');\n//   } else {\n//     alert('Please install MetaMask!');\n//   }\n// }\n\nfunction App() {\n  const [donated,setDonated] = useState[0];\n  const [lidoBalance,setLidoBalance] = useState[0];\n  const [surplus,setSurplus] = useState[0];\n\n  const connect = async() => {\n    await provider.send(\"eth_requestAccounts\", []);\n    signer = provider.getSigner();\n    contract = new ethers.Contract(contractAdressStaking, contractABIstaking, signer);\n    const userAdress = await signer.getAddress();\n    console.log(userAdress);\n  }\n  \n  const deposit = async() => {\n    let userAmount = document.getElementById('deposit-amount').value;\n    const weiAmount = ethers.utils.parseEther(userAmount);\n    console.log(await contract.deployed())\n    const tx = await contract.deposit({value: weiAmount});\n    const receipt = await tx.wait();\n  }\n  \n  const withdraw = async() => {\n    await contract.withdraw();\n  }\n  \n  const updateBalances = async() => {\n    const donated = await contract.donated();\n    setDonated(ethers.utils.formatEther(donated));\n    const lidoBalance = await contract.lidoBalance();\n    setLidoBalance(ethers.utils.formatEther(lidoBalance));\n    const surplus = lidoBalance.sub(donated);\n    setSurplus(ethers.utils.formatEther(surplus));\n  }\n\n  setTimeout(() => {\n    updateBalances();\n  },\n  1000);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1><span className='blue'>App</span> to stake</h1>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>\n          App to stake and withdraw earnings.\n        </p>\n        {/* <button onClick={loadData}>Click me</button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        <div className='App-body'>\n          <div>\n            Donated: {donated} ETH<br />\n            Balance: {lidoBalance} ETH<br />\n            Surplus: {surplus} ETH<br />\n          </div>\n          <div className='App-button-box'>\n            <button onClick={connect}>Connect Wallet</button>\n          </div>\n          <div className='App-button-box'>\n          <input type=\"text\" id=\"deposit-amount\" placeholder='ETH' /> <br />\n            <button onClick={deposit}>Deposit</button>\n          </div>\n          <div className='App-button-box'>\n            <button onClick={withdraw}>Withdraw</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
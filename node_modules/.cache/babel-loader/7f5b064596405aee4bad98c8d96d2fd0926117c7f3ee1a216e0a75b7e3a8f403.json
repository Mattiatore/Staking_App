{"ast":null,"code":"var _jsxFileName = \"/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport contractABI from './abi.json';\nimport contractABIstaking from './abi_staking.json';\n\n// This function detects most providers injected at window.ethereum\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\nconst contractAdressStaking = '0xe17e20997170b9d8e9B47ea517B62dBD0f67539F';\nlet provider = new ethers.providers.Web3Provider(window.ethereum);\nlet contract = new ethers.Contract(contractAdress, contractABI, provider);\nlet signer;\nconst connect = async () => {\n  await provider.send(\"eth_requestAccounts\", []);\n  signer = provider.getSigner();\n};\nconst deposit = async () => {};\nconst withdraw = async () => {};\nconst loadData = async () => {\n  // const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const contract = new ethers.Contract(contractAdress, contractABI, provider);\n  const greeting = await contract.hello();\n  alert(greeting);\n};\nconst metamask_test = async () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n  if (provider) {\n    // From now on, this should always be true:\n    alert(provider.isMetaMask);\n    // alert('MetaMask found');\n  } else {\n    alert('Please install MetaMask!');\n  }\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" to stake\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"App to stake and withdraw earnings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connect,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"deposit-amount\",\n            placeholder: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deposit,\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-button-box\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: withdraw,\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","contractABI","contractABIstaking","detectEthereumProvider","contractAdress","contractAdressStaking","provider","providers","Web3Provider","window","ethereum","contract","Contract","signer","connect","send","getSigner","deposit","withdraw","loadData","greeting","hello","alert","metamask_test","isMetaMask","App"],"sources":["/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n\nimport { ethers } from 'ethers';\nimport contractABI from './abi.json';\nimport contractABIstaking from './abi_staking.json';\n\n// This function detects most providers injected at window.ethereum\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nconst contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\nconst contractAdressStaking = '0xe17e20997170b9d8e9B47ea517B62dBD0f67539F';\n\nlet provider = new ethers.providers.Web3Provider(window.ethereum);\nlet contract = new ethers.Contract(contractAdress, contractABI, provider);\nlet signer;\n\nconst connect = async() => {\n  await provider.send(\"eth_requestAccounts\", []);\n  signer = provider.getSigner();\n}\n\nconst deposit = async() => {\n\n}\n\nconst withdraw = async() => {\n\n}\n\n\nconst loadData = async() => {\n  // const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const contract = new ethers.Contract(contractAdress, contractABI, provider)\n  const greeting = await contract.hello()\n  alert(greeting);\n}\n\nconst metamask_test = async() => {\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n  await provider.send(\"eth_requestAccounts\", []);\n\n  const signer = provider.getSigner()\n\n  if (provider) {\n    // From now on, this should always be true:\n    alert(provider.isMetaMask);\n    // alert('MetaMask found');\n  } else {\n    alert('Please install MetaMask!');\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1><span className='blue'>App</span> to stake</h1>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>\n          App to stake and withdraw earnings.\n        </p>\n        {/* <button onClick={loadData}>Click me</button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        <div className='App-body'>\n          <div className='App-button-box'>\n            <button onClick={connect}>Connect Wallet</button>\n          </div>\n          <div className='App-button-box'>\n          <input type=\"text\" id=\"deposit-amount\" placeholder='ETH' /> <br />\n            <button onClick={deposit}>Deposit</button>\n          </div>\n          <div className='App-button-box'>\n            <button onClick={withdraw}>Withdraw</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
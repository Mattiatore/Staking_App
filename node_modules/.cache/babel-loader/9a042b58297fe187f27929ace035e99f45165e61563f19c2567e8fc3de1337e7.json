{"ast":null,"code":"var _jsxFileName = \"/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport contractABI from './abi.json';\n\n// This function detects most providers injected at window.ethereum\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\nconst loadData = async () => {\n  // const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const provider = await detectEthereumProvider({\n    mustBeMetaMask: true\n  });\n  alert(provider.isMetaMask());\n  const contract = new ethers.Contract(contractAdress, contractABI, provider);\n  const greeting = await contract.hello();\n  alert(greeting);\n};\nconst metamask_test = async () => {\n  const provider = await detectEthereumProvider();\n  if (provider) {\n    // From now on, this should always be true:\n    alert(provider.isMetaMask);\n    // alert('MetaMask found');\n  } else {\n    alert('Please install MetaMask!');\n  }\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Change \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: metamask_test,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ethers","contractABI","detectEthereumProvider","contractAdress","loadData","provider","mustBeMetaMask","alert","isMetaMask","contract","Contract","greeting","hello","metamask_test","App"],"sources":["/Users/mattiamariantoni/Desktop/Projects/hello_world_web3/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport { ethers } from 'ethers';\nimport contractABI from './abi.json';\n\n// This function detects most providers injected at window.ethereum\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nconst contractAdress = '0x0ea7396Fc14e60a98EE1e020A67EEf3907Ada8Ac';\n\nconst loadData = async() => {\n  // const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const provider = await detectEthereumProvider({mustBeMetaMask: true});\n  alert(provider.isMetaMask());\n  const contract = new ethers.Contract(contractAdress, contractABI, provider)\n  const greeting = await contract.hello()\n  alert(greeting);\n}\n\nconst metamask_test = async() => {\n\n  const provider = await detectEthereumProvider();\n\n  if (provider) {\n    // From now on, this should always be true:\n    alert(provider.isMetaMask);\n    // alert('MetaMask found');\n  } else {\n    alert('Please install MetaMask!');\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Change <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={metamask_test}>Click me</button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,YAAY;;AAEpC;AACA,OAAOC,sBAAsB,MAAM,2BAA2B;AAAC;AAE/D,MAAMC,cAAc,GAAG,4CAA4C;AAEnE,MAAMC,QAAQ,GAAG,YAAW;EAC1B;EACA,MAAMC,QAAQ,GAAG,MAAMH,sBAAsB,CAAC;IAACI,cAAc,EAAE;EAAI,CAAC,CAAC;EACrEC,KAAK,CAACF,QAAQ,CAACG,UAAU,EAAE,CAAC;EAC5B,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,QAAQ,CAACP,cAAc,EAAEF,WAAW,EAAEI,QAAQ,CAAC;EAC3E,MAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,KAAK,EAAE;EACvCL,KAAK,CAACI,QAAQ,CAAC;AACjB,CAAC;AAED,MAAME,aAAa,GAAG,YAAW;EAE/B,MAAMR,QAAQ,GAAG,MAAMH,sBAAsB,EAAE;EAE/C,IAAIG,QAAQ,EAAE;IACZ;IACAE,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;IAC1B;EACF,CAAC,MAAM;IACLD,KAAK,CAAC,0BAA0B,CAAC;EACnC;AACF,CAAC;AAED,SAASO,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAEf,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,mCACS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5B,eACJ;QAAQ,OAAO,EAAEc,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACjD;QACE,SAAS,EAAC,UAAU;QACpB,IAAI,EAAC,qBAAqB;QAC1B,MAAM,EAAC,QAAQ;QACf,GAAG,EAAC,qBAAqB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGvB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KApBQC,GAAG;AAsBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}